<#@ template debug="false" hostspecific="true" language="C#" #>
<#@include file="../MultipleOutput.ttinclude"#>
<# var manager = Manager.Create(Host, GenerationEnvironment); #>

// ##################################################################################################
// ## Configuration
<#
    // NuSpec
    string nugetPackageId = "ProjectName";
    string nugetLicenseUrl = "";
    string nugetProjectUrl = "";
    string nugetRequireLicenseAcceptance = "false";
    string nugetReleaseInfo = "";

    // NuSpec Contents
    IList<KeyValuePair<String,String>> nugetFiles = new List<KeyValuePair<String,String>>();
    nugetFiles.Add(new KeyValuePair<String,String>("source", "target"));


    // Assembly info
    string assemblyTitle = "Title";
    string assemblyDescription = "Description";
    
    string assemblyConfiguration = "";
    
    string assemblyCompany = "CompanyName";
    string assemblyProduct = "ProductName";
    
    string assemblyCopyright = "Copyright " + DateTime.Now.Year;
    string assemblyTrademark = "";
    string assemblyCulture = "";
    
    string comVisible = "false";
    
    // use a random generated Guid here!!!
    string assemblyGuid = "8f38ab93-e204-46bb-b49f-adb9101012de";
    string assemblyVersion = "1.0.*";
    string assemblyFileVersion = "1.0.0";
#>
// ##################################################################################################


<# manager.StartNewFile("AssemblyInfo.cs"); #>
// ----------------------------------------------------------------------------
// <auto-generated>
// 		This code was generated by a tool on <#= DateTime.Now #>.
// 
//		Changes to this file may cause incorrect behavior and will be
// 			list if the code is re-generated.
// 
// Output files: AssemblyInfo.cs and the configured nuspec file
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle("<#= assemblyTitle #>")]
[assembly: AssemblyDescription("<#= assemblyDescription #>")]
[assembly: AssemblyConfiguration("<#= assemblyConfiguration #>")]
[assembly: AssemblyCompany("<#= assemblyCompany #>")]
[assembly: AssemblyProduct("<#= assemblyProduct #>")]
[assembly: AssemblyCopyright("<#= assemblyCopyright #>")]
[assembly: AssemblyTrademark("<#= assemblyTrademark #>")]
[assembly: AssemblyCulture("<#= assemblyCulture #>")]

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(<#= comVisible #>)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid("<#= assemblyGuid #>")]

[assembly: AssemblyVersion("<#= assemblyVersion #>")]
[assembly: AssemblyFileVersion("<#= assemblyFileVersion #>")]

<# manager.EndBlock(); #>

<# manager.StartNewFile( nugetPackageId + ".nuspec"); #>
<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata>
    <id><#= nugetPackageId #></id>
    <version><#= nugetPackageId #></version>
    <title><#= nugetPackageId #></title>
    <authors><#= nugetPackageId #></authors>
    <owners><#= nugetPackageId #></owners>
    <licenseUrl><#= nugetPackageId #></licenseUrl>
    <projectUrl><#= nugetPackageId #>/projectUrl>
    <requireLicenseAcceptance><#= nugetPackageId #></requireLicenseAcceptance>
    <description><#= nugetPackageId #></description>
    <summary><#= nugetPackageId #></summary>
    <releaseNotes><#= nugetPackageId #></releaseNotes>
    <copyright><#= nugetPackageId #></copyright>
  </metadata>
  <files>
  <#
  foreach(KeyValuePair<string,string> entry in nugetFiles)
  {
  #>
    <file src="<#= entry.Key #>" target="<#= entry.Value #>" />
  <#
  }
  #>
  </files>
</package>
<# manager.EndBlock(); #>

<# manager.Process(true); #>
